The infinite loop issue occurs because the filename construction logic inside the loop is not exiting properly when a unique name is found. The problem could be due to the file name not getting updated correctly within the loop, causing the condition `File.Exists(uniqueFileName)` to always return `true`.

Here's how to fix it:

### Corrected Code

Make sure that the counter-based unique file name generation works correctly:

```csharp
private void ProcessFile(string filePath, string outputFolder)
{
    try
    {
        // Open the source PDF file
        using (PdfReader reader = new PdfReader(filePath))
        {
            using (PdfDocument pdfDoc = new PdfDocument(reader))
            {
                // Iterate through each page
                for (int i = 1; i <= pdfDoc.GetNumberOfPages(); i++)
                {
                    // Create a new document for each page
                    string tempFilePath = Path.Combine(outputFolder, $"tempPage_{i}.pdf");
                    using (PdfWriter writer = new PdfWriter(tempFilePath))
                    {
                        using (PdfDocument singlePagePdf = new PdfDocument(writer))
                        {
                            // Copy the page to the new document
                            pdfDoc.CopyPagesTo(i, i, singlePagePdf);
                        }
                    }

                    // Extract the invoice number
                    string invoiceNo = ExtractInvoiceNumber(tempFilePath);
                    if (!string.IsNullOrEmpty(invoiceNo))
                    {
                        // Set base file name with Invoice Number (no counter for the first file)
                        string baseFileName = Path.Combine(outputFolder, $"Invoice_{invoiceNo}.pdf");

                        // Initialize unique file name as the base name
                        string uniqueFileName = baseFileName;

                        // If the base file (without _1) already exists, start adding numbers
                        int counter = 1;
                        while (File.Exists(uniqueFileName))
                        {
                            // Generate the next file name in the format Invoice_<invoiceNo>_counter.pdf
                            uniqueFileName = Path.Combine(outputFolder, $"Invoice_{invoiceNo}_{counter}.pdf");
                            counter++;
                        }

                        // Move the temp file to the unique file name
                        File.Move(tempFilePath, uniqueFileName);
                        Console.WriteLine($"File saved as: {uniqueFileName}");
                    }
                }
            }
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error processing file {filePath}: {ex.Message}");
    }
}
```

### Explanation:
1. **Base Filename**: The first file for the invoice number is saved as `Invoice_<invoiceNo>.pdf`.
2. **Loop Logic**: 
   - The loop correctly checks for the existence of `Invoice_<invoiceNo>.pdf` first.
   - If it exists, the loop appends `_1`, `_2`, etc., until a unique filename is found.
   - The key fix is that `uniqueFileName` is updated **inside** the loop with a new value before the next iteration.
3. **Counter Logic**: The counter increments until a unique file name is generated.

### Example:
For `Invoice No: 45765`, the following files will be created:
- First file: `Invoice_45765.pdf`
- Second file: `Invoice_45765_1.pdf`
- Third file: `Invoice_45765_2.pdf`

This should now exit the loop correctly and avoid the infinite loop issue. Let me know if it works as expected!